name: Build Linux macOS Windows
on:
  push:
    branches: [ main ]
    tags:
      - "*"
jobs:
  build-linux-amd64-arm64:
    name: 'Build Linux amd64 & arm64'
    runs-on: 'ubuntu-latest'
    steps:
    - name: Checkout source
      uses: actions/checkout@v2
    - name: Build source
      run: |
        sudo apt-get -y -q update && sudo apt-get -y -q upgrade
        sudo apt-get -y -q install g++-10-aarch64-linux-gnu
        #
        ls -l /usr/bin | grep x86_64-linux-gnu
        ls -l /usr/bin | grep aarch64-linux-gnu
        #
        x86_64-linux-gnu-g++-10 helloworld.cpp -o helloworld-amd64 -std=c++20 -O2
        x86_64-linux-gnu-strip -s helloworld-amd64
        file helloworld-amd64
        #
        aarch64-linux-gnu-g++-10 helloworld.cpp -o helloworld-arm64 -std=c++20 -O2
        aarch64-linux-gnu-strip -s helloworld-arm64
        file helloworld-arm64
      shell: bash
    - name: Upload artifacs
      uses: actions/upload-artifact@v2
      with:
        name: 'ubuntu-latest'
        path: |
          README.md
          helloworld-amd64
          helloworld-arm64
  build-windows-amd64:
    name: 'Build Windows amd64'
    runs-on: 'windows-latest'
    steps:
    - name: Checkout source
      uses: actions/checkout@v2
    - name: Build source
      run: |
        clang++ helloworld.cpp -o helloworld.exe -std=c++20 -O2
      shell: bash
    - name: Upload artifacs
      uses: actions/upload-artifact@v2
      with:
        name: 'windows-latest'
        path: |
          README.md
          helloworld.exe
  build-macos-amd64:
    name: 'Build macOS amd64'
    runs-on: 'macos-latest'
    steps:
    - name: Checkout source
      uses: actions/checkout@v2
    - name: Build source
      run: |
        g++ helloworld.cpp -o helloworld -std=c++20 -O2
        strip -x helloworld
        file helloworld
      shell: bash
    - name: Upload artifacs
      uses: actions/upload-artifact@v2
      with:
        name: 'macos-latest'
        path: |
          README.md
          helloworld
  release-linux:
    if: contains(github.ref, '/tags/')
    name: 'Release ubuntu-latest'
    runs-on: 'ubuntu-latest'
    needs: [build-linux-amd64-arm64]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Package artifacts
        run: |
          tag=${{ github.event.ref }}
          tag=${tag#"refs/tags/"}
          cp ubuntu-latest/README.md README.md
          cp ubuntu-latest/helloworld-amd64 helloworld
          chmod +x helloworld
          tar -zcvf helloworld-${tag}-linux-amd64.tar.gz helloworld README.md
          cp ubuntu-latest/helloworld-arm64 helloworld
          chmod +x helloworld
          tar -zcvf helloworld-${tag}-linux-arm64.tar.gz helloworld README.md
        shell: bash
      - name: Upload artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: |
            helloworld-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  release-macos:
    if: contains(github.ref, '/tags/')
    name: 'Release macos-latest'
    runs-on: 'macos-latest'
    needs: [build-macos-amd64]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Package artifacts
        run: |
          tag=${{ github.event.ref }}
          tag=${tag#"refs/tags/"}
          cp macos-latest/README.md README.md
          cp macos-latest/helloworld helloworld
          chmod +x helloworld
          tar -zcvf helloworld-${tag}-darwin-amd64.tar.gz helloworld README.md
        shell: bash
      - name: Upload artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: |
            helloworld-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  release-windows:
    if: contains(github.ref, '/tags/')
    name: 'Release windows-latest'
    runs-on: 'windows-latest'
    needs: [build-windows-amd64]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Package artifacts
        run: |
          tag=${{ github.event.ref }}
          tag=${tag#"refs/tags/"}
          cp windows-latest/README.md README.md
          cp windows-latest/helloworld.exe helloworld.exe
          7z a -tzip helloworld-${tag}-windows-amd64.zip helloworld.exe README.md
        shell: bash
      - name: Upload artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: |
            helloworld-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
